using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using QDLLib.Properties;
using QDLLib.Preloader;

namespace QDLLib
{
        class Commands
        {
            //QDL Commands
            // These commands communicate with the BootROM directly
            public static byte[] cmd1 = { 0x02, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
            // RequestDload
            public static byte[] cmd3 = { 0x05, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00 };

            // These commands communicate with the uploaded loader
            public static PreloaderCommand Magic = new PreloaderCommand(new BytePayload(CommandType.MagicCmd, new byte[] { 0x51, 0x43, 0x4F, 0x4D, 0x20, 0x66, 0x61, 0x73, 0x74, 0x20, 0x64, 0x6F, 0x77, 0x6E, 0x6C, 0x6F, 0x61, 0x64, 0x20, 0x70, 0x72, 0x6F, 0x74, 0x6F, 0x63, 0x6F, 0x6C, 0x20, 0x68, 0x6F, 0x73, 0x74, 0x03, 0x03, 0x09, 0xE2, 0x03, 0x05, 0x00 }));
            public static PreloaderCommand SetSecureMode = new PreloaderCommand(new BytePayload(CommandType.SetSecureModeCmd, new byte[] { 0x01 }));
            public static PreloaderCommand OpenMulti = new PreloaderCommand(new BytePayload(CommandType.OpenMultiCmd, new byte[] { 0x21 }));
            public static PreloaderCommand CloseFlush = new PreloaderCommand(new BytePayload(CommandType.CloseFlushCmd, null));
            public static PreloaderCommand Reset = new PreloaderCommand(new BytePayload(CommandType.ResetCmd, null));

            // Preloader binary
            public static byte[] preloader = Resources.MPRG8974;
        }
}
